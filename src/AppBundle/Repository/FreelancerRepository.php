<?php

namespace AppBundle\Repository;
use Doctrine\ORM\EntityManager;


/**
 * FreelancerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FreelancerRepository extends \Doctrine\ORM\EntityRepository
{

	public $em;

	public function __construct(EntityManager $em)
	{
		$this->em = $em;
	}
    


  /*
	    #3-  sort freelancer by accepted projects
	     $query = $em->createQuery('SELECT freelancer.firstname,freelancer.lastname,COUNT(demands.id) as NumberofData from AppBundle\Entity\Demands demands
	                                 JOIN demands.freelancer freelancer  WHERE  demands.demandstatus = 1 GROUP BY freelancer.id ORDER BY NumberofData DESC');
	    $freelancersByAcceptedProject = $query->getResult(); 
    */


    public function sortFreelancersByAcceptedProjects()
    {
    	$freelancersByAcceptedProject = $this->em->createQueryBuilder('demands')
										    	->select('freelancer.firstname,freelancer.lastname,COUNT(demands.id) as NumberofData')
										    	->from('AppBundle\Entity\Demands','demands')
										    	->join('demands.freelancer','freelancer')
										    	->where('demands.demandstatus = :demandstatus')
										    	->groupby('freelancer.id')
										    	->orderBy('NumberofData','DESC')
										    	->setParameter('demandstatus', 1)
										    	->getQuery()
										    	->getResult();

    	return $freelancersByAcceptedProject; 

    }

	public function sortFreelancerByReputation()
	{
		$freelancersByReputation = $this->em->createQueryBuilder('flevaluation')
										    	->select('freelancer.id,freelancer.firstname,freelancer.lastname,COUNT(flevaluation.mark) AS NumberofData ')
										    	->from('AppBundle\Entity\Flevaluation','flevaluation')
										    	->join('flevaluation.freelancer','freelancer')
										    	->groupby('freelancer.id')
										    	->orderBy('NumberofData','DESC')
										    	->getQuery()
										    	->getResult();

    	return $freelancersByReputation; 

	}    
}
